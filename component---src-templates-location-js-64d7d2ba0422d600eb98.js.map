{"version":3,"sources":["webpack:///./src/templates/Location.js"],"names":["query","Location","data","pageContext","location","markdownRemark","frontmatter","ingredients","isDesktop","useMediaQuery","title","name","style","height","image","fluid","childImageSharp","alt","maxHeight","imgStyle","objectFit","dangerouslySetInnerHTML","__html","description","class","map","item","ing","to","convertToSlug","Item","action","rarity"],"mappings":"mRA6BaA,EAAK,aAqEHC,UAlDE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAClBC,EAAQ,iBAAQF,EAAKG,eAAeC,aAClCC,EAAgBJ,EAAhBI,YACFC,EAAYC,YAAc,sBAEhC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASC,MAAON,EAASO,MACvB,yBAAKC,MAAO,CAAEC,OAAQL,EAAY,QAAU,UACzCJ,EAASU,OACR,kBAAC,IAAD,CACEC,MAAOX,EAASU,MAAME,gBAAgBD,MACtCE,IAAKb,EAASO,KACdC,MAAO,CAAEM,UAAW,QACpBC,SAAU,CACRC,UAAW,UACXP,OAAQ,WAKhB,yBAAKQ,wBAAyB,CAAEC,OAAQlB,EAASmB,eACjD,yBAAKC,MAAM,SACT,2CACA,wBAAIA,MAAM,mBACV,kBAAC,IAAD,KACGjB,GACCA,EAAYkB,KAAI,SAAAC,GACd,IAAMC,EAAG,iBAAQD,EAAKpB,aACtB,OACE,kBAAC,OAAD,CAAMsB,GAAE,gBAAkBC,wBAAcF,EAAIhB,OAC1C,kBAAC,IAAUmB,KAAX,CAAgBC,QAAM,GACpB,yBAAKP,MAAM,wCACT,wBAAIA,MAAM,QAAQG,EAAIhB,OAGxB,yBAAKa,MAAM,wCACT,sCAAYG,EAAIK","file":"component---src-templates-location-js-64d7d2ba0422d600eb98.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { graphql } from \"gatsby\"\r\nimport Image from \"gatsby-image\"\r\nimport Layout from \"./Layout/\"\r\nimport Article from \"./Article/\"\r\nimport { convertToSlug } from \"../utils/slug\"\r\nimport { useMediaQuery } from \"../utils/mediaQuery\"\r\nimport { ListGroup } from \"react-bootstrap\"\r\n\r\n// export const query = graphql`\r\n//   query($name: String! = \"Lavender Tea\") {\r\n//     markdownRemark(frontmatter: { name: { eq: $name } }) {\r\n//       id\r\n//       frontmatter {\r\n//         name\r\n//         description\r\n//         image {\r\n//           childImageSharp {\r\n//             fluid {\r\n//               ...GatsbyImageSharpFluid\r\n//             }\r\n//           }\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n// `\r\n\r\nexport const query = graphql`\r\n  query($name: String!) {\r\n    markdownRemark(frontmatter: { name: { eq: $name } }) {\r\n      id\r\n      frontmatter {\r\n        name\r\n        description\r\n        image {\r\n          childImageSharp {\r\n            fluid {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Location = ({ data, pageContext }) => {\r\n  const location = { ...data.markdownRemark.frontmatter }\r\n  const { ingredients } = pageContext\r\n  const isDesktop = useMediaQuery(\"(min-width: 500px)\")\r\n\r\n  return (\r\n    <Layout>\r\n      <Article title={location.name}>\r\n        <div style={{ height: isDesktop ? \"400px\" : \"200px\" }}>\r\n          {location.image && (\r\n            <Image\r\n              fluid={location.image.childImageSharp.fluid}\r\n              alt={location.name}\r\n              style={{ maxHeight: \"100%\" }}\r\n              imgStyle={{\r\n                objectFit: \"contain\",\r\n                height: \"100%\",\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n        <div dangerouslySetInnerHTML={{ __html: location.description }} />\r\n        <div class=\"w-100\">\r\n          <h2>Ingredients</h2>\r\n          <hr class=\"border-primary\"></hr>\r\n          <ListGroup>\r\n            {ingredients &&\r\n              ingredients.map(item => {\r\n                const ing = { ...item.frontmatter }\r\n                return (\r\n                  <Link to={`/ingredients/${convertToSlug(ing.name)}`}>\r\n                    <ListGroup.Item action>\r\n                      <div class=\"d-flex w-100 justify-content-between\">\r\n                        <h5 class=\"mb-1\">{ing.name}</h5>\r\n                        {/*<small>3 days ago</small>*/}\r\n                      </div>\r\n                      <div class=\"d-flex w-100 justify-content-between\">\r\n                        <p>Rarity: {ing.rarity}</p>\r\n                      </div>\r\n                    </ListGroup.Item>\r\n                  </Link>\r\n                )\r\n              })}\r\n          </ListGroup>\r\n        </div>\r\n      </Article>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Location\r\n"],"sourceRoot":""}